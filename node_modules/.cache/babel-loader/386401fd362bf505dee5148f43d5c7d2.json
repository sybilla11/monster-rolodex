{"ast":null,"code":"import _classCallCheck from\"/Users/sybilla/react-2020/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sybilla/react-2020/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sybilla/react-2020/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sybilla/react-2020/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';import{CardList}from'./components/card-list/card-list.component';import{Searchbox}from'./components/search-box/search-box.component';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={monsters:[],searchField:''};_this.changeHandler=function(e){_this.setState({searchField:e.target.value});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});}},{key:\"render\",value:function render(){var _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonster=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Monster Rolodex\"),/*#__PURE__*/React.createElement(Searchbox,{placeholder:\"search Monster\",changeHandle:this.changeHandler}),/*#__PURE__*/React.createElement(CardList,{monsters:filteredMonster}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/sybilla/react-2020/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","Searchbox","App","state","monsters","searchField","changeHandler","e","setState","target","value","fetch","then","response","json","users","filteredMonster","filter","monster","name","toLowerCase","includes"],"mappings":"onBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,OAASC,QAAT,KAAyB,4CAAzB,CACA,OAAQC,SAAR,KAAwB,8CAAxB,C,GAEMC,CAAAA,G,+SACJC,K,CAAQ,CACNC,QAAQ,CAAC,EADH,CAENC,WAAW,CAAE,EAFP,C,OAYRC,a,CAAgB,SAACC,CAAD,CAAO,CACrB,MAAKC,QAAL,CAAc,CAACH,WAAW,CAAEE,CAAC,CAACE,MAAF,CAASC,KAAvB,CAAd,EACD,C,4FATkB,iBACjBC,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QACZA,CAAAA,QAAQ,CAACC,IAAT,EADY,EADd,EAGGF,IAHH,CAGQ,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACP,QAAL,CAAc,CAACJ,QAAQ,CAACW,KAAV,CAAd,CAAJ,EAHb,EAID,C,uCAKO,iBAC0B,KAAKZ,KAD/B,CACCC,QADD,aACCA,QADD,CACWC,WADX,aACWA,WADX,CAEN,GAAMW,CAAAA,eAAe,CAAGZ,QAAQ,CAACa,MAAT,CAAgB,SAAAC,OAAO,QACnDA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoChB,WAAW,CAACe,WAAZ,EAApC,CADmD,EAAvB,CAAxB,CAEA,mBACF,4CACA,gDADA,cAED,oBAAC,SAAD,EAAW,WAAW,CAAG,gBAAzB,CAA0C,YAAY,CAAI,KAAKd,aAA/D,EAFC,cAGA,oBAAC,QAAD,EAAU,QAAQ,CAAEU,eAApB,EAHA,CADE,CAOC,C,iBA3BajB,S,EA8BlB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {Searchbox} from './components/search-box/search-box.component'\n\nclass App extends Component {\n  state = {\n    monsters:[],\n    searchField: ''\n  };\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => \n      response.json())\n      .then(users => this.setState({monsters:users}));\n  }\n\n  changeHandler = (e) => {\n    this.setState({searchField: e.target.value});\n  };\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonster = monsters.filter(monster => \nmonster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n  <div>\n  <h1>Monster Rolodex</h1>\n <Searchbox placeholder = 'search Monster' changeHandle = {this.changeHandler}></Searchbox>\n  <CardList monsters={filteredMonster}>\n  </CardList>\n</div>\n  );}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}